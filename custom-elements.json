{
  "version": "experimental",
  "tags": [
    {
      "name": "xtal-state-parse",
      "path": "./xtal-state-parse.js",
      "attributes": [
        {
          "name": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "guid",
          "type": "string"
        },
        {
          "name": "propActions",
          "type": "{}[]",
          "default": "[\"linkValue\"]"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "xtal-state-update",
      "path": "./xtal-state-update.js",
      "description": "Web component wrapper around the history api",
      "attributes": [
        {
          "name": "with-path",
          "description": "object inside a new empty object, with key equal to this value.\r\nE.g. if the incoming object is {foo: 'hello', bar: 'world'}\r\nand with-path = 'myPath'\r\nthen the source object which be merged into is:\r\n{myPath: {foo: 'hello', bar: 'world'}}",
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "history",
          "description": "Window Context History.State Object to push/replace"
        },
        {
          "name": "url",
          "description": "URL to use when calling push/replace state",
          "type": "string"
        },
        {
          "name": "urlSearch",
          "description": "Regular expression to search url for.",
          "type": "string"
        },
        {
          "name": "replaceUrlValue",
          "description": "Replace URL expression, coupled with urlSearch",
          "type": "string"
        },
        {
          "name": "stringifyFn",
          "type": "(t: any) => string"
        },
        {
          "name": "withPath",
          "attribute": "with-path",
          "description": "object inside a new empty object, with key equal to this value.\r\nE.g. if the incoming object is {foo: 'hello', bar: 'world'}\r\nand with-path = 'myPath'\r\nthen the source object which be merged into is:\r\n{myPath: {foo: 'hello', bar: 'world'}}",
          "type": "string"
        },
        {
          "name": "guid",
          "type": "string"
        },
        {
          "name": "propActions",
          "default": "[null]"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        }
      ]
    },
    {
      "name": "xtal-state-watch",
      "path": "./xtal-state-watch.js",
      "description": "Watch for history.state changes",
      "attributes": [
        {
          "name": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        }
      ],
      "properties": [
        {
          "name": "history"
        },
        {
          "name": "guid",
          "type": "string"
        },
        {
          "name": "propActions",
          "default": "[null]"
        },
        {
          "name": "disabled",
          "attribute": "disabled",
          "description": "Any component that emits events should not do so if it is disabled.\r\nNote that this is not enforced, but the disabled property is made available.\r\nUsers of this mix-in should ensure not to call \"de\" if this property is set to true.",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "history-changed"
        }
      ]
    }
  ]
}