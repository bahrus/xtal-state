import{XtalStateCommit}from"./xtal-state-commit.js";var wherePath2="where-path";export var XtalStateUpdate=function(_XtalStateCommit){babelHelpers.inherits(XtalStateUpdate,_XtalStateCommit);function XtalStateUpdate(){babelHelpers.classCallCheck(this,XtalStateUpdate);return babelHelpers.possibleConstructorReturn(this,(XtalStateUpdate.__proto__||Object.getPrototypeOf(XtalStateUpdate)).apply(this,arguments))}babelHelpers.createClass(XtalStateUpdate,[{key:"attributeChangedCallback",value:function attributeChangedCallback(name,oldVal,newVal){switch(name){case wherePath2:this._wherePath=newVal;break;}babelHelpers.get(XtalStateUpdate.prototype.__proto__||Object.getPrototypeOf(XtalStateUpdate.prototype),"attributeChangedCallback",this).call(this,name,oldVal,newVal);this.onPropsChange()}},{key:"namespaceHistory",value:function namespaceHistory(history){var _this=this;if(!this._wherePath)return history;var returnObj={},currPath=returnObj,tokens=this._wherePath.split("."),len=tokens.length-1,count=0;tokens.forEach(function(path){currPath[path]=count===len?_this._namespacedHistoryUpdate:{};currPath=currPath[path];count++});return returnObj}},{key:"mergeDeep",value:function mergeDeep(target,source){if("object"!==babelHelpers.typeof(target))return;if("object"!==babelHelpers.typeof(source))return;for(var key in source){var sourceVal=source[key],targetVal=target[key];if(!sourceVal)continue;if(!targetVal){target[key]=sourceVal;continue}switch(babelHelpers.typeof(sourceVal)){case"object":switch(babelHelpers.typeof(targetVal)){case"object":this.mergeDeep(targetVal,sourceVal);break;default:target[key]=sourceVal;break;}break;default:target[key]=sourceVal;}}return target}},{key:"preProcess",value:function preProcess(stateUpdate){var _this2=this;stateUpdate.wherePath=this._wherePath;XtalStateUpdate._lastPath=this._wherePath;this.de("pre-history-merge",{value:stateUpdate});if(!stateUpdate.completed){if(stateUpdate.customUpdater){stateUpdate.completed=!0;var update=stateUpdate.customUpdater(stateUpdate);if(update.proposedState.then&&babelHelpers.typeof("function"===update.proposedState.then)){update.then(function(newDetail){_this2._debouncer(newDetail)})}}else{var newState=window.history.state?Object.assign({},window.history.state):{};this.mergeDeep(newState,this._namespacedHistoryUpdate)}}}},{key:"wherePath",get:function get(){return this._wherePath},set:function set(val){this.setAttribute(wherePath2,val)}}],[{key:"is",get:function get(){return"xtal-state-update"}},{key:"observedAttributes",get:function get(){return babelHelpers.get(XtalStateUpdate.__proto__||Object.getPrototypeOf(XtalStateUpdate),"observedAttributes",this).concat([wherePath2])}}]);return XtalStateUpdate}(XtalStateCommit);if(!customElements.get(XtalStateUpdate.is)){customElements.define(XtalStateUpdate.is,XtalStateUpdate)}