import{XtalStateBase}from"./xtal-state-base.js";import{WithPath,with_path}from"./node_modules/xtal-latx/with-path.js";import{UrlFormatter}from"./url-formatter.js";import{define}from"./node_modules/xtal-latx/define.js";import{debounce}from"./node_modules/xtal-latx/debounce.js";const make="make",rewrite="rewrite",history$="history",title="title",new$$="new";export class XtalStateCommit extends UrlFormatter(WithPath(XtalStateBase)){constructor(){super(...arguments);this._title=""}static get is(){return"xtal-state-commit"}get make(){return this._make}set make(val){this.attr(make,val,"")}get rewrite(){return this._rewrite}set rewrite(val){this.attr(rewrite,val,"")}get history(){return this._window.history.state}set history(newVal){this._history=newVal;this.onPropsChange()}get title(){return this._title}set title(val){this.attr(title,val)}get syncHistory(){return this._syncHistory}set syncHistory(nv){this._syncHistory=nv;this.value=nv;this.de("history",{value:nv})}get new(){return this._new}set new(v){this.attr(new$$,v,"")}static get observedAttributes(){return super.observedAttributes.concat(super.UFAttribs).concat([make,rewrite,title,with_path,new$$])}attributeChangedCallback(n,ov,nv){switch(n){case new$$:case rewrite:case make:this["_"+n]=null!==nv;break;case title:this["_"+n]=nv;break;case with_path:this._withPath=nv;break;}super.attributeChangedCallback(n,ov,nv)}connectedCallback(){this._upgradeProperties([make,rewrite,title,"withPath","stringifyFn",new$$,"syncHistory"].concat([history$]));this._debouncer=debounce(()=>{this.updateHistory()},50);super.connectedCallback()}onPropsChange(){if(this._disabled)return;if(super.onPropsChange()){if(this._notReady){setTimeout(()=>{this.onPropsChange()},50);return}return!0}if(!this._make&&!this._rewrite)return!0;this._debouncer()}mergedHistory(){if(this._history===void 0)return;return this.wrap(this._history)}updateHistory(){const hist=this._new?{}:this.mergedHistory();if(null===hist||hist===void 0)return;const method=this.make?"push":"replace";this.value=hist;this._disabled=!0;this.de("history",{value:hist});this._disabled=!1;if(this.make&&!this.url)return;let url=this._url;if(!url||this._new){if(!this._replaceUrlValue||this._new){url=this._window.location.href}}if(!url)return null;url=this.adjustUrl(url);if(null===url)return;this._window.history[method+"State"](hist,this._title,url)}}define(XtalStateCommit);