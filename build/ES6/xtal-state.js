(function(){const a='make',b='rewrite';class c extends HTMLElement{static get properties(){return[a,b,'history']}get make(){return this.make}set make(b){null===b?this.removeAttribute(a):this.setAttribute(a,'')}get rewrite(){return this._rewrite}set rewrite(a){a?this.setAttribute(b,''):this.removeAttribute(b)}get history(){return this._history}set history(a){this._history=a,this.onInputPropsChange()}onInputPropsChange(){if(!this._make&&!this._rewrite)return;if(!this.history)return;let a;switch(typeof this.history){case'object':a=window.history.state?Object.assign({},window.history.state):{},Object.assign(a,this.history);break;case'string':case'number':a=this.history;}this.make?window.history.pushState(a,''):window.history.replaceState(a,'')}static get observedAttributes(){const a=c.properties;return[a[0],a[1]]}attributeChangedCallback(c,d,e){c===a?this._make=null!==e:c===b?this._rewrite=null!==e:void 0;this.onInputPropsChange()}_upgradeProperty(a){if(this.hasOwnProperty(a)){let b=this[a];delete this[a],this[a]=b}}connectedCallback(){c.properties.forEach((a)=>this._upgradeProperty(a))}}customElements.define('xtal-state',c)})();