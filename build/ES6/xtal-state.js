(function(){const a='set-state-and-push',b='set-state-and-replace';class c extends HTMLElement{get state(){return window.history.state}set state(a){const b=new CustomEvent('state-changed',{detail:{value:a},bubbles:!0,composed:!1});this.dispatchEvent(b)}get setStateAndPush(){return this._push}set setStateAndPush(b){b?this.setAttribute(a,''):this.removeAttribute(a)}get setStateAndReplace(){return this._replace}set setStateAndReplace(a){a?this.setAttribute(b,''):this.removeAttribute(b)}get source(){return this._source}set source(a){this._source=a,this.onPropsChange()}onPropsChange(){if((this._push||this._replace)&&this.source){const a=window.history.state?Object.assign({},window.history.state):{};Object.assign(a,this.source),this._push?window.history.pushState(a,''):window.history.replaceState(a,'')}}static get observedAttributes(){return[a,b]}attributeChangedCallback(c,d,e){c===a?this._push=null!==e:c===b?this._replace=null!==e:void 0;this.onPropsChange()}_upgradeProperty(a){if(this.hasOwnProperty(a)){let b=this[a];delete this[a],this[a]=b}}connectedCallback(){this._upgradeProperty('setStateAndPush'),this._upgradeProperty('setStateAndReplace'),window.addEventListener('popstate',this.updateState)}disconnectedCallback(){window.removeEventListener('popstate',this.updateState)}updateState(){this.state=window.history.state}}customElements.define('xtal-state',c)})();